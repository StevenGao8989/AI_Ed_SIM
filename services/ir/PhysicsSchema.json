{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://chat-tutor.ai/schemas/physics-ir/v1.0.0",
  "title": "PhysicsIR Schema",
  "description": "JSON Schema for Physics Intermediate Representation (IR)",
  "type": "object",
  "required": ["metadata", "system", "simulation", "output", "optimization", "validation"],
  "properties": {
    "metadata": {
      "type": "object",
      "title": "Metadata",
      "description": "IR metadata information",
      "required": ["id", "version", "created_at", "source_dsl_id", "system_type", "difficulty", "grade"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]+$",
          "description": "Unique identifier for the IR"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Schema version (semantic versioning)"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of creation"
        },
        "source_dsl_id": {
          "type": "string",
          "description": "ID of the source DSL"
        },
        "system_type": {
          "type": "string",
          "enum": [
            "kinematics_linear",
            "kinematics_2d",
            "kinematics_3d",
            "dynamics_linear",
            "dynamics_rotational",
            "oscillatory_system",
            "wave_system",
            "electromagnetic_field",
            "electrical_circuit",
            "thermodynamic_system",
            "optical_system",
            "quantum_system",
            "fluid_dynamics",
            "statistical_mechanics"
          ],
          "description": "Type of physics system"
        },
        "difficulty": {
          "type": "string",
          "enum": ["easy", "medium", "hard", "expert"],
          "description": "Difficulty level"
        },
        "grade": {
          "type": "string",
          "description": "Educational grade level"
        }
      },
      "additionalProperties": false
    },
    "system": {
      "type": "object",
      "title": "Physics System",
      "description": "Physical system configuration",
      "required": ["type", "dimensions", "modules", "objects", "parameters", "constraints", "environment"],
      "properties": {
        "type": {
          "type": "string",
          "description": "System type identifier"
        },
        "dimensions": {
          "type": "integer",
          "minimum": 1,
          "maximum": 3,
          "description": "Number of spatial dimensions"
        },
        "modules": {
          "type": "array",
          "description": "Physics modules",
          "items": {
            "$ref": "#/definitions/IRModule"
          },
          "minItems": 1
        },
        "objects": {
          "type": "array",
          "description": "Physical objects",
          "items": {
            "$ref": "#/definitions/IRObject"
          }
        },
        "parameters": {
          "type": "array",
          "description": "System parameters",
          "items": {
            "$ref": "#/definitions/IRParameter"
          },
          "minItems": 1
        },
        "constraints": {
          "type": "array",
          "description": "System constraints",
          "items": {
            "$ref": "#/definitions/IRConstraint"
          }
        },
        "environment": {
          "type": "object",
          "description": "Environment configuration",
          "required": ["gravity", "air_resistance", "temperature"],
          "properties": {
            "gravity": {
              "$ref": "#/definitions/IRPhysicalQuantity"
            },
            "air_resistance": {
              "type": "boolean",
              "description": "Whether air resistance is enabled"
            },
            "temperature": {
              "$ref": "#/definitions/IRPhysicalQuantity"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "simulation": {
      "type": "object",
      "title": "Simulation Configuration",
      "description": "Simulation parameters and settings",
      "required": ["duration", "time_step", "solver", "precision", "tolerance", "max_iterations", "events"],
      "properties": {
        "duration": {
          "$ref": "#/definitions/IRPhysicalQuantity"
        },
        "time_step": {
          "$ref": "#/definitions/IRPhysicalQuantity"
        },
        "solver": {
          "type": "string",
          "enum": ["euler", "rk4", "verlet", "adaptive"],
          "description": "Numerical solver method"
        },
        "precision": {
          "type": "string",
          "enum": ["low", "medium", "high", "ultra"],
          "description": "Simulation precision level"
        },
        "tolerance": {
          "type": "number",
          "minimum": 0,
          "description": "Numerical tolerance"
        },
        "max_iterations": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of iterations"
        },
        "events": {
          "type": "array",
          "description": "Simulation events",
          "items": {
            "$ref": "#/definitions/IREvent"
          }
        }
      },
      "additionalProperties": false
    },
    "output": {
      "type": "object",
      "title": "Output Configuration",
      "description": "Output and visualization settings",
      "required": ["variables", "export_formats", "plots", "animations", "checkpoints"],
      "properties": {
        "variables": {
          "type": "array",
          "description": "Output variables",
          "items": {
            "type": "string"
          }
        },
        "export_formats": {
          "type": "array",
          "description": "Export formats",
          "items": {
            "type": "string",
            "enum": ["csv", "json", "yaml", "hdf5", "netcdf"]
          }
        },
        "plots": {
          "type": "array",
          "description": "Plot configurations",
          "items": {
            "$ref": "#/definitions/IRPlot"
          }
        },
        "animations": {
          "type": "array",
          "description": "Animation configurations",
          "items": {
            "$ref": "#/definitions/IRAnimation"
          }
        },
        "checkpoints": {
          "type": "array",
          "description": "Simulation checkpoints",
          "items": {
            "$ref": "#/definitions/IRCheckpoint"
          }
        }
      },
      "additionalProperties": false
    },
    "optimization": {
      "type": "object",
      "title": "Optimization Configuration",
      "description": "Computational optimization settings",
      "required": ["precomputed_values", "cached_derivatives", "parallel_modules", "dependency_graph"],
      "properties": {
        "precomputed_values": {
          "type": "object",
          "description": "Precomputed constant values",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
              "type": "number"
            }
          }
        },
        "cached_derivatives": {
          "type": "object",
          "description": "Cached derivative expressions",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
              "type": "string"
            }
          }
        },
        "parallel_modules": {
          "type": "array",
          "description": "Groups of modules that can be computed in parallel",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "dependency_graph": {
          "type": "object",
          "description": "Module dependency graph",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "validation": {
      "type": "object",
      "title": "Validation Results",
      "description": "IR validation information",
      "required": ["structure_valid", "physics_valid", "units_consistent", "constraints_satisfied", "warnings", "errors"],
      "properties": {
        "structure_valid": {
          "type": "boolean",
          "description": "Whether structure validation passed"
        },
        "physics_valid": {
          "type": "boolean",
          "description": "Whether physics validation passed"
        },
        "units_consistent": {
          "type": "boolean",
          "description": "Whether units are consistent"
        },
        "constraints_satisfied": {
          "type": "boolean",
          "description": "Whether constraints are satisfied"
        },
        "warnings": {
          "type": "array",
          "description": "Validation warnings",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "type": "array",
          "description": "Validation errors",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "definitions": {
    "IRVector3": {
      "type": "object",
      "title": "3D Vector",
      "description": "Three-dimensional vector",
      "required": ["x", "y", "z"],
      "properties": {
        "x": {
          "type": "number",
          "description": "X component"
        },
        "y": {
          "type": "number",
          "description": "Y component"
        },
        "z": {
          "type": "number",
          "description": "Z component"
        }
      },
      "additionalProperties": false
    },
    "IRPhysicalQuantity": {
      "type": "object",
      "title": "Physical Quantity",
      "description": "Physical quantity with value, unit, and dimension",
      "required": ["value", "unit", "dimension"],
      "properties": {
        "value": {
          "type": "number",
          "description": "Numerical value"
        },
        "unit": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9/\\^²³°-]+$",
          "description": "Physical unit"
        },
        "dimension": {
          "type": "string",
          "pattern": "^[A-Za-z0-9\\^-]+$",
          "description": "Physical dimension (e.g., L, T, M, LT^-1)"
        }
      },
      "additionalProperties": false
    },
    "IRParameter": {
      "type": "object",
      "title": "Parameter",
      "description": "System parameter",
      "required": ["symbol", "value", "role", "description", "dependencies", "constraints"],
      "properties": {
        "symbol": {
          "type": "string",
          "pattern": "^[a-zA-Z_α-ωΑ-Ω][a-zA-Z0-9_α-ωΑ-Ω]*$",
          "description": "Parameter symbol"
        },
        "value": {
          "$ref": "#/definitions/IRPhysicalQuantity"
        },
        "role": {
          "type": "string",
          "enum": ["given", "unknown", "constant", "derived"],
          "description": "Parameter role"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Parameter description"
        },
        "dependencies": {
          "type": "array",
          "description": "Parameter dependencies",
          "items": {
            "type": "string"
          }
        },
        "constraints": {
          "type": "array",
          "description": "Parameter constraints",
          "items": {
            "$ref": "#/definitions/IRConstraint"
          }
        }
      },
      "additionalProperties": false
    },
    "IRConstraint": {
      "type": "object",
      "title": "Constraint",
      "description": "Physical or mathematical constraint",
      "required": ["type", "expression", "parameters", "description"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["equality", "inequality", "boundary", "initial", "physical"],
          "description": "Constraint type"
        },
        "expression": {
          "type": "string",
          "minLength": 1,
          "description": "Mathematical expression"
        },
        "parameters": {
          "type": "array",
          "description": "Parameters involved in constraint",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Constraint description"
        }
      },
      "additionalProperties": false
    },
    "IRObject": {
      "type": "object",
      "title": "Physical Object",
      "description": "Physical object in the system",
      "required": ["id", "name", "type", "position", "velocity", "acceleration", "mass", "properties", "constraints"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Object identifier"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Object name"
        },
        "type": {
          "type": "string",
          "enum": ["particle", "rigid_body", "field", "wave"],
          "description": "Object type"
        },
        "position": {
          "$ref": "#/definitions/IRVector3"
        },
        "velocity": {
          "$ref": "#/definitions/IRVector3"
        },
        "acceleration": {
          "$ref": "#/definitions/IRVector3"
        },
        "mass": {
          "$ref": "#/definitions/IRPhysicalQuantity"
        },
        "properties": {
          "type": "object",
          "description": "Object properties",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
              "$ref": "#/definitions/IRPhysicalQuantity"
            }
          }
        },
        "constraints": {
          "type": "array",
          "description": "Object constraints",
          "items": {
            "$ref": "#/definitions/IRConstraint"
          }
        }
      },
      "additionalProperties": false
    },
    "IRModule": {
      "type": "object",
      "title": "Physics Module",
      "description": "Physics calculation module",
      "required": ["id", "type", "name", "description", "parameters", "equations", "dependencies", "output"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Module identifier"
        },
        "type": {
          "type": "string",
          "enum": ["oscillation", "wave", "kinematics", "dynamics", "electromagnetic", "thermal", "optical", "quantum", "generic"],
          "description": "Module type"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Module name"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Module description"
        },
        "parameters": {
          "type": "array",
          "description": "Module parameters",
          "items": {
            "$ref": "#/definitions/IRParameter"
          }
        },
        "equations": {
          "type": "array",
          "description": "Module equations",
          "items": {
            "$ref": "#/definitions/IREquation"
          }
        },
        "dependencies": {
          "type": "array",
          "description": "Module dependencies",
          "items": {
            "type": "string"
          }
        },
        "output": {
          "type": "array",
          "description": "Module output variables",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "IREquation": {
      "type": "object",
      "title": "Mathematical Equation",
      "description": "Mathematical equation in the module",
      "required": ["id", "type", "expression", "variables", "parameters", "description"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Equation identifier"
        },
        "type": {
          "type": "string",
          "enum": ["differential", "algebraic", "constraint"],
          "description": "Equation type"
        },
        "expression": {
          "type": "string",
          "minLength": 1,
          "description": "Mathematical expression"
        },
        "variables": {
          "type": "array",
          "description": "Variables in the equation",
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "array",
          "description": "Parameters in the equation",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Equation description"
        }
      },
      "additionalProperties": false
    },
    "IREvent": {
      "type": "object",
      "title": "Simulation Event",
      "description": "Event during simulation",
      "required": ["id", "type", "trigger", "action", "description"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Event identifier"
        },
        "type": {
          "type": "string",
          "enum": ["time", "threshold", "custom", "boundary", "collision", "condition"],
          "description": "Event type"
        },
        "trigger": {
          "type": "object",
          "description": "Event trigger condition",
          "required": ["condition", "value"],
          "properties": {
            "condition": {
              "type": "string",
              "minLength": 1,
              "description": "Trigger condition"
            },
            "value": {
              "$ref": "#/definitions/IRPhysicalQuantity"
            }
          },
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "minLength": 1,
          "description": "Action to take when event occurs"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Event description"
        }
      },
      "additionalProperties": false
    },
    "IRPlot": {
      "type": "object",
      "title": "Plot Configuration",
      "description": "Plot visualization configuration",
      "required": ["id", "type", "title", "x_axis", "y_axis", "variables", "style"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Plot identifier"
        },
        "type": {
          "type": "string",
          "enum": ["time_series", "trajectory", "phase_space", "energy", "field"],
          "description": "Plot type"
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "description": "Plot title"
        },
        "x_axis": {
          "type": "string",
          "minLength": 1,
          "description": "X-axis variable"
        },
        "y_axis": {
          "type": "string",
          "minLength": 1,
          "description": "Y-axis variable"
        },
        "variables": {
          "type": "array",
          "description": "Variables to plot",
          "items": {
            "type": "string"
          }
        },
        "style": {
          "type": "object",
          "description": "Plot styling options"
        }
      },
      "additionalProperties": false
    },
    "IRAnimation": {
      "type": "object",
      "title": "Animation Configuration",
      "description": "Animation visualization configuration",
      "required": ["id", "type", "camera", "speed", "loop", "duration", "easing", "objects", "style"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Animation identifier"
        },
        "type": {
          "type": "string",
          "enum": ["2d", "3d"],
          "description": "Animation type"
        },
        "camera": {
          "type": "string",
          "enum": ["fixed", "follow", "orbit", "first_person"],
          "description": "Camera type"
        },
        "speed": {
          "type": "number",
          "minimum": 0,
          "description": "Animation speed multiplier"
        },
        "loop": {
          "type": "boolean",
          "description": "Whether animation loops"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Animation duration in seconds"
        },
        "easing": {
          "type": "string",
          "enum": ["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic"],
          "description": "Animation easing function"
        },
        "objects": {
          "type": "array",
          "description": "Objects to animate",
          "items": {
            "type": "string"
          }
        },
        "style": {
          "type": "object",
          "description": "Animation styling options"
        }
      },
      "additionalProperties": false
    },
    "IRCheckpoint": {
      "type": "object",
      "title": "Simulation Checkpoint",
      "description": "Simulation checkpoint configuration",
      "required": ["id", "time", "variables", "description"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "description": "Checkpoint identifier"
        },
        "time": {
          "$ref": "#/definitions/IRPhysicalQuantity"
        },
        "variables": {
          "type": "array",
          "description": "Variables to save at checkpoint",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Checkpoint description"
        }
      },
      "additionalProperties": false
    }
  }
}
